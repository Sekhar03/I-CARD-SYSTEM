version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:6.0
    container_name: icard-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: icard_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - icard-network

  # Application Service
  app:
    build: .
    container_name: icard-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/icard_db?authSource=admin
      - CORS_ORIGIN=http://localhost:3000
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      - UPLOAD_PATH=./public/uploads
      - MAX_FILE_SIZE=5242880
      - SESSION_SECRET=your-super-secret-key-here
    volumes:
      - ./public/uploads:/app/public/uploads
    depends_on:
      - mongodb
    networks:
      - icard-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/status/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: icard-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - icard-network

volumes:
  mongodb_data:
    driver: local

networks:
  icard-network:
    driver: bridge 